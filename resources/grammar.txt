PROGRAM -> FUNCTIONS
FUNCTIONS -> FUNCTION FUNCTIONS
FUNCTIONS -> ''
FUNCTION -> TYPE id ( PARAMS ) { STMTS }
PARAMS -> ''
PARAMS -> TYPE id PARAMSA
PARAMSA -> , TYPE id PARAMSA
PARAMSA -> ''
STMTS -> STMT STMTS
STMTS -> ''
STMT -> DECL
STMT -> ASSIGN
STMT -> CONDITIONAL
STMT -> LOOP
STMT -> SWITCH
STMT -> FUNC
FUNC -> fn id ( ARG_LIST ) ;
ARG_LIST -> EXPR ARG_LISTA
ARG_LISTA -> , EXPR ARG_LISTA
ARG_LISTA -> ''
DECL -> TYPE ID_LIST ;
ID_LIST -> id ID_LISTA
ID_LISTA -> , id ID_LISTA
ID_LISTA -> ''
TYPE -> int
TYPE -> float
TYPE -> char
ASSIGN -> id = EXPR ;
EXPR -> number EXPA
EXPR -> id EXPA
EXPR -> uop EXPR EXPA
EXPA -> bop EXPR EXPA
EXPA -> ''
CONDITIONAL -> if CONDITIONAL-STMTS
CONDITIONAL-STMTS -> { CONDITION : STMTS } CONDITIONAL-STMTS
CONDITIONAL-STMTS -> ''
CONDITION -> EXPR
CONDITION -> else
SWITCH -> switch EXPR { SWITCH-STMTS }
SWITCH-STMTS -> SWITCH-VALUE : STMTS SWITCH-STMTSA
SWITCH-STMTSA -> , SWITCH-VALUE : STMTS SWITCH-STMTSA
SWITCH-STMTSA -> ''
SWITCH-VALUE -> EXPR
SWITCH-VALUE -> default
LOOP -> FOR
LOOP -> WHILE
LOOP -> DO-WHILE
WHILE -> while ( EXPR ) { STMTS }
FOR -> for ( ASSIGN EXPR ; EXPR ) { STMTS }
DO-WHILE -> do { STMTS } while ( EXPR )